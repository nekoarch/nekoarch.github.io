u is a lisp dialect.

currently there are two versions of u
- u/incunabulum:
  - open source (mit), but expect bugs
  - works on all platforms, depends on glibc
  - support a tiny subset of the actual u lang
  - no simd, no ffi(common-lisp/python/c...)
  - based on a early dev version of u (around 2023)
- u:
  - linux avx512/avx2, nodep(even libc)
  - small but useful libs(math,scripting,gui..)
  - interpreter/compiler(x86,rv), can bootstrap
  - extremely small, blazingly fast, actively maintained
  - mailto:root@nekoarch.cc

get:
    https://github.com/nekoarch/u-incunabulum

build:
    gcc -Os u.c -lm -o u
    rlwrap ./u

man:
    #t #nil + - * / < > sqrt
    define defmacro lambda if cond load
    quote atom eq
    car cdr cons
    and or not xor

types:
    f(i)64, no string support

example:
    ./u ./e/t.u
    ./u
    > (load (quote ./l/k.u))
    > pi ; 3.14159 (in math.k)
    > (map (lambda (x) (* x x)) (quote (1 2 3))) ; (1 4 9)
    > (unique (quote (1 2 2 3 3 3 4))) ; (1 2 3 4)
